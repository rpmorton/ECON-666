%Created by RM on 2019.04.24 for Proposal/PAP
%Find least squares fit, equivalent to GMM

%%
%Import Data

data = csvread('/Users/russellmorton/Desktop/Coursework/Winter 2019/ECON 666/Proposal and PAP/PowerCalcs/Output/dataskewnormal.csv',1,0);

quantile = data(:,2);
output_1000 = data(:,3);
profit_perc = data(:,4);
price = data(:,5);

%%
%Fit LogNormal: Output

mu_hat = 31 ;
sigma2_hat = 25;

x_hat = [mu_hat sigma2_hat];

output = output_1000 / 1000;

options  =  optimset('GradObj','off','LargeScale','off','Display','iter','TolFun',1e-16,'TolX',1e-16,'Diagnostics','on','MaxFunEvals',200000,'MaxIter',1000); 
[estimate_output] = fminunc(@(x)lognormleastsquares(x,output,quantile),x_hat,options);

%%
%Fit LogNormal: profit_perc


mu_hat = 8 ;
sigma2_hat = 6;

x_hat = [mu_hat sigma2_hat];

options  =  optimset('GradObj','off','LargeScale','off','Display','iter','TolFun',1e-16,'TolX',1e-16,'Diagnostics','on','MaxFunEvals',200000,'MaxIter',1000); 
[estimate_profit_perc] = fminunc(@(x)lognormleastsquares(x,profit_perc,quantile),x_hat,options);


%%
%Fit LogNormal: price


mu_hat = .3 ;
sigma2_hat = .1;

x_hat = [mu_hat sigma2_hat];

price_1000 = price / 1000;

options  =  optimset('GradObj','off','LargeScale','off','Display','iter','TolFun',1e-16,'TolX',1e-16,'Diagnostics','on','MaxFunEvals',200000,'MaxIter',1000); 
[estimate_price] = fminunc(@(x)lognormleastsquares(x,price_1000,quantile),x_hat,options);



%%
%Fit Lognormal: 


function [lognormls] = lognormleastsquares(x,var,quantile)
    % Parameter
    
    mu = x(1,1);
    sigma2 = x(1,2);
   
   %quantile val
   erf_inv_use = erfinv(2 * quantile - 1);
   quantile_emp = exp(mu + sqrt(2 * sigma2) .* erf_inv_use);
    
   %find sse
   squared_diff = (var - quantile_emp) .* (var - quantile_emp);
   lognormls = sum(squared_diff);
    
    
end